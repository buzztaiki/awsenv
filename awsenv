#!/bin/bash

usage_exit() {
  cat <<EOF
Usage: awsenv [options]

Examples:

  Run a command with my-profle:
    awsenv -p my-profile env | grep AWS_ACCESS_KEY_ID

  Run a command with default profile (or AWS_PROFILE):
    awsenv env | grep AWS_ACCESS_KEY_ID

  Export the AWS_PROFILE environment variable with my-profile:
    eval \$(awsenv -ep my-profile)

  Export credential environment variables with my-profile:
    eval \$(awsenv -Ep my-profile)

  If you use the fish shell:
    awsenv -Ep my-profile | source -

EOF
  exit "$1"
}

run() {
  eval "$(export_credentials bash)"
  "$@"
}

export_variable() {
  local shell="$1" key="$2" value="$3"
  if [ "$shell" = fish ]; then
    echo "set -x $key '$value'"
  else
    echo "export $key='$value'"
  fi
}

export_profile() {
  local shell="$1"
  export_variable "$shell" AWS_PROFILE "$AWS_PROFILE"
}

export_credentials() {
  local shell="$1"
  export_profile "$shell"
  export_variable "$shell" AWS_DEFAULT_REGION "$(aws configure get region)"
  export_variable "$shell" AWS_ACCESS_KEY_ID "$(aws configure get aws_access_key_id)"
  export_variable "$shell" AWS_SECRET_ACCESS_KEY "$(aws configure get aws_secret_access_key)"
}

while getopts p:eEh OPT
do
  case $OPT in
    p) AWS_PROFILE=$OPTARG ;;
    e) action=export_profile ;;
    E) action=export_credentials ;;
    h) usage_exit ;;
  esac
done
shift $((OPTIND - 1))

[ $# -eq 0 ] && [ -z "$action" ] && usage_exit 1 1>&2

shell=$(basename "$SHELL")
export AWS_PROFILE
case $action in
  export_profile|export_credentials) $action "$shell";;
  *) run "$@" ;;
esac
